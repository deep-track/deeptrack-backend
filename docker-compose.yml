services:
  zookeeper: 
    container_name: 'deeptrack-zookeeper'
    image: wurstmeister/zookeeper:latest
    restart: always
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports: 
      - '2181:2181'
    networks:
      - deeptrack-networks
    volumes: 
      - ./zoo/data:/var/lib/zookeeper/data
      - ./zoo/log:/var/lib/zookeeper/log
    
  kafka:
    container_name: 'deeptrack-kafka-1'
    image: wurstmeister/kafka:latest
    restart: no
    ports: 
      - '9092:9092'
    links:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeper:2181'
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT, EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS_ENABLE: 'topic-test:1:1'
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - deeptrack-networks
    
  
  kafdrop:
    container_name: 'deeptrack-kafdrop'
    image: obsidiandynamics/kafdrop
    restart: no
    ports:
      - '9000:9000'
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx512M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka
    networks:
      - deeptrack-networks

  cache:
    container_name: 'deeptrack-cache'
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    command: 
    volumes:
      - cache_data:/data
    networks:
      - deeptrack-networks

  postgres:
    container_name: 'deeptrack-postgres'
    image: postgres:16
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - .env.db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - deeptrack-networks

  pg-admin:
    container_name: 'deeptrack-pg-admin'
    image: elestio/pgadmin
    restart: always
    ports:
      - '16543:80'
    depends_on:
      - postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: capturai01@gmail.com
      PGADMIN_DEFAULT_PASSWORD: test@123
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    networks:
      - deeptrack-networks


  mongodb:
    container_name: 'deeptrack-mongodb'
    image: mongo:latest
    restart: always
    ports:
      - '27017:27017'
    networks:
      - deeptrack-networks

volumes:
  postgres_data:
  cache_data:
  kafka_data:

networks:
  deeptrack-networks:
    driver: bridge
